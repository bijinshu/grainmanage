@using GrainManage.Web
@{
    ViewBag.Title = "我的生意";
}
<script src="~/js/common-tool.js"></script>
<div class="container" id="tradeInfo">
    <div class="row">
        <div class="col-md-12">
            <div class="tab-pane fade in active">
                <div class="form-inline" role="form">
                    <div class="form-group" style="margin-right:6px;">
                        <input type="text" class="form-control" v-model="search.ContactName" placeholder="请输入联系人姓名" />
                    </div>
                    <div class="form-group" style="margin-right:6px;">
                        <input type="text" class="form-control" v-model="search.ProductName" placeholder="请输入粮食名称" />
                    </div>
                    <div class="form-group" style="margin-right:6px;">
                        <label class="control-label visible-xs col-xs-6">开始时间：</label>
                        <input type="date" class="form-control" style="width:auto" id="StartTime" placeholder="请选择开始时间"/>
                    </div>
                    <div class="form-group" style="margin-right:6px;">
                        <label class="control-label visible-xs col-xs-6">终止时间：</label>
                        <input type="date" class="form-control" style="width:auto" id="EndTime" placeholder="请选择终止时间" />
                    </div>
                    <div class="form-group" style="margin-right:6px;">
                        <select v-model="search.TradeType" class="form-control">
                            <option value="null">请选择交易类型</option>
                            <option value="0">收购</option>
                            <option value="1">出售</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <button type="button" class="btn btn-info btn-block" v-on:click="getData(search.PageIndex=0)">查询</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="table-responsive">
                <table class="table table-bordered table-hover">
                    <caption style="color:red;font-weight:bolder;">
                        @if (UrlVar.Has(Model.Level, UrlVar.Trade_New, Model.Urls))
                        {
                            <button type="button" v-if="productList&&productList.length>0" class="btn btn-success btn-sm" v-on:click="showAdd" v-cloak><span class="glyphicon glyphicon-plus"></span> 添加新交易</button>
                        }
                    </caption>
                    <thead>
                        <tr>
                            <th>操作</th>
                            @if (Model.Level >= GlobalVar.AdminLevel)
                            {
                                <th>店铺名称</th>
                            }
                            <th>客户姓名</th>
                            <th>交易详情</th>
                            <th>应付金额</th>
                            <th>已付金额</th>
                            <th>偏差</th>
                            <th>备注</th>
                            <th class="hidden-xs">交易类型</th>
                            <th>交易时间</th>
                            <th class="hidden-xs">创建人</th>
                        </tr>
                    </thead>
                    <tbody v-cloak>
                        <tr v-for="item in list" :key="item.Id">
                            <td>
                                @if (UrlVar.Has(Model.Level, UrlVar.Trade_Edit, Model.Urls))
                                {
                                    <a style="cursor:pointer;" v-if="item.CanModify" v-on:click.stop="showEdit(item)">编辑</a>
                                }
                                <a>&nbsp;</a>
                                @if (UrlVar.Has(Model.Level, UrlVar.Trade_Delete, Model.Urls))
                                {
                                    <a style="cursor:pointer;" v-if="item.CanModify" v-on:click.stop="showDelete(item)">删除</a>
                                }
                            </td>
                            @if (Model.Level >= GlobalVar.AdminLevel)
                            {
                                <td>{{item.CompName}}</td>
                            }
                            <td><span v-if="item.ContactId>0">{{item.ContactName}}</span><span v-else style="color:red;" title="该用户不存在">{{item.ContactName}}</span></td>
                            <td>
                                <table class="table table-bordered table-striped" style="margin:0">
                                    <thead>
                                        <tr>
                                            <th>类别</th>
                                            <th>毛重</th>
                                            <th>皮重</th>
                                            <th>价格</th>
                                            <th>净重</th>
                                            <th>理论金额</th>
                                            <th>成交金额</th>
                                            <th>偏差</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr v-for="(item2,index) in item.Details">
                                            <td>{{item2.ProductName}}</td>
                                            <td>{{toFixed(item2.RoughWeight)}}</td>
                                            <td>{{toFixed(item2.Tare)}}</td>
                                            <td>{{toFixed(item2.Price)}}</td>
                                            <td>{{toFixed(item2.RoughWeight-item2.Tare)}}</td>
                                            <td>{{toFixed((item2.RoughWeight-item2.Tare)*item2.Price)}}</td>
                                            <td>{{toFixed(item2.ActualMoney)}}</td>
                                            <td>{{toFixed(item2.ActualMoney-(item2.RoughWeight-item2.Tare)*item2.Price)}}</td>
                                        </tr>
                                        <tr>
                                            <td colspan="8">理论总金额：{{toFixed(getTotalMoney(item.Details))}}，成交总金额：{{toFixed(getTotalActualMoney(item.Details))}}，总偏差：{{toFixed(getTotalActualMoney(item.Details) - getTotalMoney(item.Details))}}</td>
                                        </tr>
                                    </tbody>
                                </table>
                            </td>
                            <td>{{toFixed(getTotalActualMoney(item.Details))}}</td>
                            <td>{{toFixed(item.PaidMoney)}}</td>
                            <td>{{toFixed(item.PaidMoney-getTotalActualMoney(item.Details))}}</td>
                            <td>{{item.Remark}}</td>
                            <td class="hidden-xs">{{item.TradeType==1?'出售':'收购'}}</td>
                            <td>{{item.CreatedAt|formatTime}}</td>
                            <td class="hidden-xs">{{item.Creator}}</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <pager v-on:reload="getData" v-bind:total="total" v-bind:page-index.sync="search.PageIndex" v-bind:page-size.sync="search.PageSize"></pager>
        </div>
    </div>
    <div v-cloak>
        @Html.Partial("_TradeDetail")
        @Html.Partial("_ContactList")
        @Html.Partial("_DeleteModal", "删除交易")
        <modal-dialog v-bind:title="AlertTitle" v-bind:msg="msg"></modal-dialog>
    </div>
</div>
<script>
    $(function () {
        new Vue({
            el: "#tradeInfo",
            data: {
                msg: '',
                total: 0,
                list: [],
                productList: [],
                contactList: [],
                contactTotal:0,
                search: { ContactName: '', ProductName: '', TradeType: null, PageIndex: 0, PageSize: 10 },
                contactSearch: { Name: '', Mobile: '', Address: '', PageIndex: 0, PageSize: 10 },
                frmTrade: {
                    Id:0,
                    ContactId: 0,
                    ContactName:'',
                    TradeType: 0,
                    PaidMoney:0,
                    Details:[],
                    Remark:''
                },
                IsDisabled: false,
                AlertTitle: '',
                PanelTitle: '',
                currentItem: {},
                currentContact: {},
                isFirstTime:true
            },
            methods: {
                getData: function () {
                    this.search.StartTime = $("#StartTime").val();
                    this.search.EndTime = $("#EndTime").val();
                    $.post('@UrlVar.Trade_Index', this.search).done(function (result, status) {
                        this.list = result.data;
                        this.total = result.total;
                        if (result.code != 1 && !this.isFirstTime) {
                            this.showAlert(result.msg);
                        }
                        this.isFirstTime = false;
                    }.bind(this));
                },
                getContactList: function () {
                    $.post('@UrlVar.Contact_GetList', this.contactSearch).done(function (result, status) {
                          this.contactList = result.data;
                          this.contactTotal = result.total;
                    }.bind(this));
                },
                getProductList: function () {
                    $.post('@UrlVar.Product_List').done(function (result, status) {
                        this.productList = result;
                    }.bind(this));
                },
                save: function () {
                    this.IsDisabled = true;
                    var url = this.frmTrade.Id > 0 ? '@UrlVar.Trade_Edit' : '@UrlVar.Trade_New';
                    $.post(url, this.frmTrade).always(function (result, status) {
                         this.IsDisabled = false;
                         if (result.code == 1) {
                            this.getData();
                            this.hidePanel("#saveTradeModal");
                         }
                         else {
                           this.showAlert(result.msg);
                         }
                     }.bind(this));
                },
                setPrice: function (detail) {
                    var existedItem = null;
                    for (var i = 0; i < detail.ProductList.length; i++) {
                        if (detail.ProductList[i].Id == detail.ProductId) {
                            existedItem = detail.ProductList[i];
                            break;
                        }
                    }
                    detail.Price = existedItem ? existedItem.Price : '';
                    detail.ProductName = existedItem ? existedItem.Name : '';
                },
                showAdd: function () {
                    this.frmTrade.Id = 0;
                    this.frmTrade.TradeType = 0;
                    this.frmTrade.ContactId = 0;
                    this.frmTrade.ContactName ='';
                    this.frmTrade.PaidMoney = '';
                    this.frmTrade.Remark = '';
                    this.frmTrade.Details = [];
                    this.addNewDetailForm();
                    this.showPanel("新增交易","#saveTradeModal");
                },
                showEdit: function (item) {
                    this.frmTrade.Id = item.Id;
                    this.frmTrade.TradeType = item.TradeType;
                    this.frmTrade.ContactId = item.ContactId;
                    this.frmTrade.ContactName = item.ContactName;
                    this.frmTrade.PaidMoney = item.PaidMoney;
                    this.frmTrade.Remark = item.Remark;
                    this.frmTrade.Details = item.Details.concat();
                    for (var i = 0; i < this.frmTrade.Details.length; i++) {
                        var detail = this.frmTrade.Details[i];
                        detail.ProductList = this.productList.concat();
                        this.setPrice(detail);
                    }
                    this.showPanel("编辑交易","#saveTradeModal");
                },
                showDelete: function (item) {
                    this.currentItem = item;
                    this.msg = "您确定要删除与 [" + item.ContactName + "] 的交易记录吗?";
                    this.showPanel("#deleteDialog");
                },
                deleteItem: function () {
                    $.post('@UrlVar.Trade_Delete', { tradeId: this.currentItem.Id }).always(function (result, status) {
                        this.hidePanel('#deleteDialog');
                        if (result.code == 1) {
                            this.getData();
                        }
                        else {
                            this.showAlert(result.msg);
                        }
                    }.bind(this));
                },
                addNewDetailForm: function () {
                    var productId = this.productList[0].Id;
                    var newDetail = { ProductId: productId, ProductName: '', Price: 0, RoughWeight: '', Tare: '', PaidMoney: 0, ProductList: [],Remark:'' };
                    newDetail.ProductList = this.productList.concat();
                    this.frmTrade.PaidMoney = '';
                    this.frmTrade.Details.push(newDetail);
                    this.setPrice(newDetail);
                    if (window.screen.width>768) {
                        setTimeout(function () {
                            var div = document.getElementById("formDetail");
                            div.scrollTop = div.scrollHeight;
                        }, 100);
                    }
                },
                delDetailForm: function (index) {
                    if (this.frmTrade.Details.length > 1) {
                        this.frmTrade.Details.splice(index, 1);
                        this.setMoney();
                    }
                },
                showContact: function () {
                    this.getContactList();
                    this.showPanel("#chooseContactModal");
                },
                setMoney: function () {
                    var money = 0;
                    for (var i = 0; i < this.frmTrade.Details.length; i++) {
                        var detail = this.frmTrade.Details[i];
                        money += parseFloat(detail.ActualMoney);
                    }
                    this.frmTrade.PaidMoney = this.toFixed(money);
                },
                setDetailMoney: function (event, detail) {
                    if (event==null||( event && event.target.id != 'ActualMoney')) {
                        var price = parseFloat(detail.Price);
                        var roughWeight = parseFloat(detail.RoughWeight);
                        var tare = parseFloat(detail.Tare);
                        if (price > 0 && roughWeight >= 0 && tare >= 0 && roughWeight > tare) {
                            detail.ActualMoney = this.toFixed(price * (roughWeight - tare))
                        } else {
                            detail.ActualMoney = '';
                        }
                        this.setMoney();
                    } else if (event) {
                        detail.ActualMoney = event.target.value;
                        this.setMoney();
                    }
                },
                isActualMoneyValid: function (actualMoney) {
                    return actualMoney != '' && parseFloat(actualMoney) > 0;
                },
                getTotalMoney: function (detailList) {
                    var total = 0;
                    if (detailList && detailList.length > 0) {
                        for (var i = 0; i < detailList.length; i++) {
                            var detail = detailList[i];
                            total += (detail.RoughWeight - detail.Tare) * detail.Price;
                        }
                    }
                    return total;
                },
                getTotalActualMoney: function (detailList) {
                    var totalActual = 0;
                    if (detailList && detailList.length > 0) {
                        for (var i = 0; i < detailList.length; i++) {
                            var detail = detailList[i];
                            totalActual += detail.ActualMoney;
                        }
                    }
                    return totalActual;
                }
            },
            computed: {
                isContactNameValid: function () {
                    return (/^[\u4E00-\u9FA5\uF900-\uFA2D]{2,4}$/g).test(this.frmTrade.ContactName);
                },
                isRemarkValid: function () {
                    return (/^.{0,200}$/g).test(this.frmTrade.Remark);
                },
                isTotalMoneyValid: function () {
                    var isValid = this.frmTrade.PaidMoney != '' && parseFloat(this.frmTrade.PaidMoney) >= 0 && this.frmTrade.Details && this.frmTrade.Details.length>0;
                    if (isValid) {
                        for (var i = 0; i < this.frmTrade.Details; i++) {
                            var current = this.frmTrade.Details[i];
                            if (current.Price==''||
                                current.Price < 0 ||
                                current.RoughWeight==''||
                                current.RoughWeight < 0 ||
                                current.Tare==''||
                                current.Tare < 0 ||
                                current.Tare > current.RoughWeight) {
                                isValid = false;
                                break;
                            }
                        }
                    }
                    return isValid;
                }
            },
            created: function () {
                this.getData();
                this.getProductList();
                this.$watch('currentContact', function (newVal, oldVal) {
                    this.frmTrade.ContactId = newVal.Id;
                    this.frmTrade.ContactName = newVal.ContactName;
                });
            }
        })
        $('#chooseContactModal').on('hidden.bs.modal', function () {
            document.getElementsByTagName('body')[0].className = 'modal-open';
        });
        if (window.screen.width > 768) {
            var div = document.getElementById("formDetail");
            div.style = 'box-sizing:border-box;max-height:326px;overflow-y:auto;';
        }
    })
</script>
