@using GrainManage.Web
@{
    ViewBag.Title = "我的客户";
}
<div class="container" id="contactInfo">
    <div class="row">
        <div class="col-md-12">
            <div class="tab-pane fade in active">
                <div class="form-inline" role="form">
                    <div class="form-group" style="margin-right:6px;">
                        <label class="control-label hidden-xs hidden-sm">客户姓名：</label>
                        <input type="text" class="form-control" v-model="search.Name" placeholder="请输入客户姓名" />
                    </div>
                    <div class="form-group" style="margin-right:6px;">
                        <label class="control-label hidden-xs hidden-sm">手机号码：</label>
                        <input type="text" class="form-control" v-model="search.Mobile" placeholder="手机号码" />
                    </div>
                    <div class="form-group" style="margin-right:6px;">
                        <label class="control-label hidden-xs hidden-sm">地址：</label>
                        <input type="text" class="form-control" v-model="search.Address" placeholder="请输入地址" />
                    </div>
                    <div class="form-group">
                        <button type="button" class="btn btn-info btn-block" v-on:click="getData(search.PageIndex=0)">查询</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="table-responsive">
                <table class="table table-bordered table-hover">
                    <caption style="color:red;font-weight:bolder;">
                        @if (UrlVar.Has(Model.Level, UrlVar.Contact_New, Model.Urls))
                        {
                            <button type="button" class="btn btn-success btn-sm" v-on:click="showAdd"><span class="glyphicon glyphicon-plus"></span> 添加新客户</button>
                        }
                    </caption>
                    <thead>
                        <tr>
                            <th>操作</th>
                            @if (Model.Level >= GlobalVar.AdminLevel)
                            {
                                <th>店铺名称</th>
                            }
                            <th>客户姓名</th>
                            <th>手机号码</th>
                            <th>地址</th>
                            <th class="hidden-xs hidden-sm">微信</th>
                            <th class="hidden-xs hidden-sm">QQ</th>
                            <th class="hidden-xs hidden-sm">邮箱</th>
                        </tr>
                    </thead>
                    <tbody v-cloak>
                        <tr v-for="item in list" :key="item.Id">
                            <td>
                                @if (UrlVar.Has(Model.Level, UrlVar.Contact_Edit, Model.Urls))
                                {
                                    <a style="cursor:pointer;" v-if="item.CanModify" v-on:click.stop="showEdit(item)">编辑</a>
                                }
                                @if (UrlVar.Has(Model.Level, UrlVar.Contact_Delete, Model.Urls))
                                {
                                    <a style="cursor:pointer" v-on:click="showDelete(item)">删除</a>
                                }
                                @if (UrlVar.Has(Model.Level, UrlVar.Trade_GetByContactId, Model.Urls))
                                {
                                    <a style="cursor:pointer;" v-if="item.TradeCount" v-on:click.stop="showHistory(item)">历史&nbsp;<span class="badge" style="background-color:green">{{item.TradeCount}}</span></a>
                                }
                            </td>
                            @if (Model.Level >= GlobalVar.AdminLevel)
                            {
                                <td>{{item.CompName}}</td>
                            }
                            <td>{{item.ContactName}}</td>
                            <td>{{item.Mobile}}</td>
                            <td>{{item.Address}}</td>
                            <td class="hidden-xs hidden-sm">{{item.Weixin}}</td>
                            <td class="hidden-xs hidden-sm">{{item.QQ}}</td>
                            <td class="hidden-xs hidden-sm">{{item.Email}}</td>

                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <pager v-on:reload="getData" v-bind:total="total" v-bind:page-index.sync="search.PageIndex" v-bind:page-size.sync="search.PageSize"></pager>
        </div>
    </div>
    <div v-cloak>
        @Html.Partial("_ContactDetail")
        @Html.Partial("_History")
        @Html.Partial("_DeleteModal", "删除客户")
        <modal-dialog v-bind:title="AlertTitle" v-bind:msg="msg"></modal-dialog>
    </div>
</div>
<script type="text/javascript" src="https://3gimg.qq.com/lightmap/components/geolocation/geolocation.min.js"></script>
<script>
    $(function () {
        new Vue({
            el: "#contactInfo",
            data: {
                msg: '',
                total: 0,
                list: [],
                tradeList: [],
                search: { Name: '', Mobile: '', Address: '', PageIndex: 0, PageSize: 10 },
                frm: {
                    Id: 0,
                    ContactName: '',
                    Mobile: '',
                    Address: '',
                    Weixin: '',
                    QQ: '',
                    Email: '',
                    Remark: ''
                },
                currentItem: {},
                IsDisabled: false,
                AddressType: 'manual',
                GeoMsg: '',
                AlertTitle: '',
                PanelTitle: '',
                isFirstTime: true
            },
            methods: {
                getData: function () {
                    $.post('@UrlVar.Contact_Index', this.search).done(function (result, status) {
                        this.list = result.data;
                        this.total = result.total;
                        if (result.code != 1 && !this.isFirstTime) {
                            this.showAlert(result.msg);
                        }
                        this.isFirstTime = false;
                    }.bind(this));
                },
                showHistory: function (item) {
                    this.tradeList = [];
                    $.post('@UrlVar.Trade_GetByContactId', { contactId: item.Id }).done(function (result, status) {
                        this.tradeList = result.data;
                    }.bind(this));
                    this.showPanel("#historyModal");
                },
                showAdd: function () {
                    this.frm.Id = 0;
                    this.frm.ContactName = '';
                    this.frm.Mobile = '';
                    this.frm.Address = '';
                    this.frm.Weixin = '';
                    this.frm.QQ = '';
                    this.frm.Email = '';
                    this.frm.Remark = '';
                    this.showPanel('添加新客户', "#saveContactModal");
                },
                showEdit: function (item) {
                    this.frm.Id = item.Id;
                    this.frm.ContactName = item.ContactName;
                    this.frm.Mobile = item.Mobile;
                    this.frm.Address = item.Address;
                    this.frm.Weixin = item.Weixin;
                    this.frm.QQ = item.QQ;
                    this.frm.Email = item.Email;
                    this.frm.Remark = item.Remark;
                    this.showPanel('编辑客户', "#saveContactModal");
                },
                save: function (event) {
                    if (this.isContactNameValid && this.isEmailValid && this.isPhoneValid && this.isQQValid && this.isWeixinValid) {
                        this.IsDisabled = true;
                        var url = this.frm.Id > 0 ? '@UrlVar.Contact_Edit' : '@UrlVar.Contact_New';
                        $.post(url, this.frm).always(function (result, status) {
                            this.IsDisabled = false;
                            if (result.code == 1) {
                                this.hidePanel("#saveContactModal");
                                this.getData();
                            }
                            else {
                                this.showAlert(result.msg);
                            }
                        }.bind(this));
                    }
                    else {
                        this.showAlert('请检查各项参数是否正确');
                    }
                },
                showDelete: function (item) {
                    this.currentItem = item;
                    this.msg = "您确定要删除 [" + item.ContactName + "]吗?";
                    this.showPanel("#deleteDialog");
                },
                deleteItem: function () {
                    $.post('@UrlVar.Contact_Delete', { contactId: this.currentItem.Id }).always(function (result, status) {
                        this.hidePanel("#deleteDialog");
                        if (result.code == 1) {
                            this.getData();
                        }
                        else {
                            this.showAlert(result.msg);
                        }
                    }.bind(this));
                },
                getTotalMoney: function (detailList) {
                    var total = 0;
                    if (detailList && detailList.length > 0) {
                        for (var i = 0; i < detailList.length; i++) {
                            var detail = detailList[i];
                            total += (detail.RoughWeight - detail.Tare) * detail.Price;
                        }
                    }
                    return total;
                },
                getTotalActualMoney: function (detailList) {
                    var totalActual = 0;
                    if (detailList && detailList.length > 0) {
                        for (var i = 0; i < detailList.length; i++) {
                            var detail = detailList[i];
                            totalActual += detail.ActualMoney;
                        }
                    }
                    return totalActual;
                },
                showPosition: function (latitude, longitude, accuracy) {
                    var latlon = latitude + ',' + longitude;
                    var self = this;
                    if (this.AddressType == 'baidu') {
                        var baidu_url = "http://api.map.baidu.com/geocoder/v2/?ak=C93b5178d7a8ebdb830b9b557abce78b&callback=renderReverse&location=" + latlon + "&output=json&pois=0";
                        $.ajax({
                            type: "GET",
                            dataType: "jsonp",
                            url: baidu_url,
                            beforeSend: function () {
                                self.GeoMsg = '正在定位...';
                            },
                            success: function (json) {
                                self.GeoMsg = '';
                                if (json.status == 0) {
                                    self.frm.Address = json.result.formatted_address;
                                }
                            },
                            error: function (XMLHttpRequest, textStatus, errorThrown) {
                                self.GeoMsg = "定位失败,无法从baidu获取位置信息";
                            }
                        });
                    } else if (this.AddressType == 'google') {
                        var google_url = 'https://maps.google.cn/maps/api/geocode/json?latlng=' + latlon + '&language=CN';
                        $.ajax({
                            type: "GET",
                            url: google_url,
                            beforeSend: function () {
                                self.GeoMsg = '正在定位...';
                            },
                            success: function (json) {
                                if (json.status == 'OK') {
                                    self.GeoMsg = '';
                                    var results = json.results;
                                    $.each(results, function (index, array) {
                                        if (index == 0) {
                                            self.frm.Address = array['formatted_address'];
                                        }
                                    });
                                }
                            },
                            error: function (XMLHttpRequest, textStatus, errorThrown) {
                                self.GeoMsg = "定位失败,无法从google获取位置信息";
                            }
                        });
                    }
                },
                setPosition: function (position) {
                    this.showPosition(position.coords.latitude, position.coords.longitude);
                },
                setError: function (error) {
                    switch (error.code) {
                        case error.PERMISSION_DENIED:
                            this.GeoMsg = "定位失败,用户拒绝请求地理定位。" + error.message;
                            break;
                        case error.POSITION_UNAVAILABLE:
                            this.GeoMsg = "定位失败,位置信息不可用。" + error.message;
                            break;
                        case error.TIMEOUT:
                            this.GeoMsg = "定位失败,请求获取用户位置超时。" + error.message;
                            break;
                        case error.UNKNOWN_ERROR:
                            this.GeoMsg = "定位失败,定位系统失效。" + error.message;
                            break;
                    }
                },
                setTencentPosition: function (result) {
                    this.showPosition(result.lat, result.lng, result.accuracy);
                },
                setTencentError: function (err) {
                    if (err) {
                        this.GeoMsg = err;
                    }
                    else {
                        this.GeoMsg = '腾讯定位接口出错。';
                    }
                },
                getLocation: function () {
                    if (this.AddressType == 'baidu' || this.AddressType == 'google') {
                        if (window.location.protocol == 'https:' || navigator.userAgent.indexOf('Android') > -1 || navigator.userAgent.indexOf('Adr') > -1) {
                            if (navigator.geolocation) {
                                navigator.geolocation.getCurrentPosition(this.setPosition, this.setError, { enableHighAcuracy: true, timeout: 5000, maximumAge: 3000 });
                            } else {
                                this.GeoMsg = "浏览器不支持地理定位。";
                            }
                        }
                        else {
                            var geolocation = new qq.maps.Geolocation("OB4BZ-D4W3U-B7VVO-4PJWW-6TKDJ-WPB77", "myapp");
                            geolocation.getLocation(this.setTencentPosition, this.setTencentError);
                        }
                    }
                    else {
                        this.GeoMsg = '';
                        this.frm.Address = '';
                    }
                }
            },
            computed: {
                isContactNameValid: function () {
                    return (/^[\u4E00-\u9FA5\uF900-\uFA2D]{2,4}$/g).test(this.frm.ContactName);
                },
                isEmailValid: function () {
                    return !this.frm.Email || (/^\w+([-+.]\w+)*@@\w+([-.]\w+)*\.\w+([-.]\w+)*$/g).test(this.frm.Email);
                },
                isPhoneValid: function () {
                    return (/^1[34578]\d{9}$/g).test(this.frm.Mobile);
                },
                isQQValid: function () {
                    return !this.frm.QQ || (/^\d{4,12}$/g).test(this.frm.QQ);
                },
                isWeixinValid: function () {
                    return !this.frm.Weixin || (/^[a-zA-Z\d_]{5,20}$/g).test(this.frm.Weixin);
                },
                isRemarkValid: function () {
                    return (/^.{0,200}$/g).test(this.frm.Remark);
                }
            },
            created: function () {
                this.getData();
                this.$watch('AddressType', function (newVal, oldVal) {
                    this.getLocation();
                });
            }
        })
    })
</script>
